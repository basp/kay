//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\Kay.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="KayParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
public interface IKayVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.cycle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCycle([NotNull] KayParser.CycleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.simpleDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleDefinition([NotNull] KayParser.SimpleDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] KayParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactor([NotNull] KayParser.FactorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.setLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetLiteral([NotNull] KayParser.SetLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.quotationLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuotationLiteral([NotNull] KayParser.QuotationLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.atomicSymbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomicSymbol([NotNull] KayParser.AtomicSymbolContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.booleanConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanConstant([NotNull] KayParser.BooleanConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.integerConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerConstant([NotNull] KayParser.IntegerConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.floatConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatConstant([NotNull] KayParser.FloatConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.characterConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharacterConstant([NotNull] KayParser.CharacterConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KayParser.stringConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringConstant([NotNull] KayParser.StringConstantContext context);
}
